function FileData_Pairs(x)
{
x.t("safely","external");
x.t("safely","encode");
x.t("example","creates");
x.t("example","earlier");
x.t("example","element.print");
x.t("example","following");
x.t("example","var");
x.t("tells","parser");
x.t("debugging","asutfstring");
x.t("particularly","important");
x.t("root","node");
x.t("properties","comments");
x.t("properties","export");
x.t("properties","indent");
x.t("method","method");
x.t("method","outputs");
x.t("method","close");
x.t("method","best");
x.t("method","helpful");
x.t("method","writes");
x.t("method","array");
x.t("method","information");
x.t("method","mentioned");
x.t("method","signatures");
x.t("method","returns");
x.t("method","serializes");
x.t("base64","encode");
x.t("parameter","list");
x.t("parameter","end");
x.t("exports","element\u2019s");
x.t("serialization","integration");
x.t("serialization","apis");
x.t("serialization","options");
x.t("serialization","optionally");
x.t("asutfstring","method");
x.t("base-64","encode");
x.t("gw.util.base64util.encode","element.bytes");
x.t("comment","next");
x.t("comment","a.$comment");
x.t("comment","print");
x.t("alternate","method");
x.t("bullet","point");
x.t("refer","http://tools.ietf.org/html/rfc3629");
x.t("refer","http://www.w3.org/tr/rec-xml/");
x.t("integration","code");
x.t("pretty","boolean");
x.t("create","element");
x.t("always","base64");
x.t("always","base-64");
x.t("always","test");
x.t("binary","data");
x.t("instance","parameter");
x.t("ensures","order");
x.t("improve","visual");
x.t("topic","details");
x.t("creates","element");
x.t("later","topic");
x.t("later","export");
x.t("outputs","node");
x.t("parsers","autodetect");
x.t("line","separators");
x.t("line","separator");
x.t("sequences","feature");
x.t("uses","gw.xml.xmlserializationoptions");
x.t("text_val.select","link");
x.t("points","warning");
x.t("type","xmlserializationoptions");
x.t("type","byte");
x.t("type","entire");
x.t("best","approach");
x.t("best","export");
x.t("close","stream");
x.t("mix","xsd");
x.t("utf-16","existence");
x.t("utf-16","encoding");
x.t("external","systems");
x.t("hierarchy","default");
x.t("hierarchy","element");
x.t("sort","boolean");
x.t("customization","xml");
x.t("default","true");
x.t("default","settings");
x.t("default","two");
x.t("default","newline");
x.t("property","effect");
x.t("apis","generate");
x.t("link","directly");
x.t("details","customization");
x.t("details","xml");
x.t("element","root");
x.t("element","comment");
x.t("element","default");
x.t("element","bytes");
x.t("element","provides");
x.t("element","standard");
x.t("element","string");
x.t("element","comments");
x.t("element","match");
x.t("element","adds");
x.t("element","based");
x.t("element","var");
x.t("element","xmldeclaration");
x.t("speaking","best");
x.t("objects","contains");
x.t("new","xmlserializationoptions");
x.t("new","com.guidewire.pl.docexamples.gosu.xml.simpleelement.myelement");
x.t("includes","following");
x.t("xmlserializationoptions","instance");
x.t("xmlserializationoptions","later");
x.t("xmlserializationoptions",":comments");
x.t("document","tells");
x.t("top","file");
x.t("printing","element");
x.t("messsage","gosu");
x.t("list","serialization");
x.t("file","example");
x.t("beginning","document");
x.t("add","comment");
x.t("guide","gosu");
x.t("autodetect","encoding");
x.t("applies","xsd-based");
x.t("system.out","example");
x.t("sure","test");
x.t("false","gosu");
x.t("false","note");
x.t("spaces","lineseparator");
x.t("directly","page");
x.t("byte","data");
x.t("byte","order");
x.t("byte","containing");
x.t("specified","encoding");
x.t("existence","byte");
x.t("test","characters");
x.t("test","xml");
x.t("test","code");
x.t("high","unicode");
x.t("true","particularly");
x.t("true","exports");
x.t("true","pretty");
x.t("true","ensures");
x.t("true","false");
x.t("true","gosu");
x.t("true","independent");
x.t("text_val.focus","text_val.select");
x.t("suitable","later");
x.t("demonstrates","printing");
x.t("settings","comments");
x.t("settings","a.print");
x.t("gosu","attempts");
x.t("gosu","syntax");
x.t("gosu","xml");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","ignores");
x.t("writeto","method");
x.t("layout","xml");
x.t("bytes","example");
x.t("bytes","method");
x.t("bytes","type");
x.t("bytes","compactly");
x.t("bytes","xml");
x.t("bytes","code");
x.t("bytes","gw.util.base64util.decode");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","properties");
x.t("methods","alternate");
x.t("methods","customize");
x.t("methods","serialize");
x.t("provides","following");
x.t("helpful","debugging");
x.t("boolean","true");
x.t("serializing","xml");
x.t("sends","stores");
x.t("sends","xml");
x.t("standard","output");
x.t("absence","specified");
x.t("sec-guessing","important");
x.t("ascii","sort");
x.t("omit","comments");
x.t("writes","output");
x.t("attempts","improve");
x.t("gw.xml.xmlserializationoptions","create");
x.t("com.guidewire.pl.docexamples.gosu.xml.simpleelement.myelement","add");
x.t("array","bytes");
x.t("utf-8-encoded","bytes");
x.t("element.bytes","reverse");
x.t("element.bytes","compare");
x.t("string","sets");
x.t("string","specifies");
x.t("string","value");
x.t("string","export");
x.t("string","object");
x.t("sets","line");
x.t("entire","xml");
x.t("entire","graph");
x.t("non-xsd-based","elements");
x.t("write","xml");
x.t("compactly","safely");
x.t("stream","system.out");
x.t("stream","java.io.outputstream");
x.t("stream","afterward");
x.t("earlier","section");
x.t("characters","high");
x.t("characters","methods");
x.t("characters","words");
x.t(":comments","false");
x.t("error","occurred");
x.t("contrast","asutfstring");
x.t("point","code");
x.t("independent","whether");
x.t("next","bullet");
x.t("next","demonstrates");
x.t("syntax","var");
x.t("http://tools.ietf.org/html/rfc3629","serializations");
x.t("options","object");
x.t("feature","applies");
x.t("feature","effect");
x.t("guidewire_selectall","var");
x.t("lineseparator","properties");
x.t("lineseparator","string");
x.t("function","guidewire_selectall");
x.t("approach","serializing");
x.t("comments","uses");
x.t("comments","default");
x.t("comments","boolean");
x.t("comments","customize");
x.t("comments","a.print");
x.t("words","sure");
x.t("unicode","code");
x.t("customize","serialization");
x.t("customize","output");
x.t("specifies","string");
x.t("whether","root");
x.t("whether","write");
x.t("base64string","gw.util.base64util.encode");
x.t("stores","xml");
x.t("a.print","new");
x.t("a.print","print");
x.t("xml","safely");
x.t("xml","serialization");
x.t("xml","parsers");
x.t("xml","hierarchy");
x.t("xml","element");
x.t("xml","objects");
x.t("xml","byte");
x.t("xml","transport");
x.t("xml","header");
x.t("xml","exporting");
x.t("xml","indenting");
x.t("xml","declaration");
x.t("xml","data");
x.t("xml","var");
x.t("xml","generally");
x.t("transport","understands");
x.t("(base64string)","print");
x.t("section","bytes");
x.t("match","xsd");
x.t("element.asutfstring","method");
x.t("node","string");
x.t("node","xsd-based");
x.t("important","sequences");
x.t("important","although");
x.t("reference","guide");
x.t("code","points");
x.t("code","sends");
x.t("code","non-english");
x.t("code","var");
x.t("end","parameter");
x.t("serialize","xml");
x.t("level","hierarchy");
x.t("adds","element");
x.t("header","suitable");
x.t("header","specify");
x.t("a.$comment","hello");
x.t("occurred","messsage");
x.t("exporting","xml");
x.t("visual","layout");
x.t("indenting","line");
x.t("value","containing");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("non-english","characters");
x.t("element\u2019s","comments");
x.t("declaration","top");
x.t("xmlelement","objects");
x.t("xmlelement","class");
x.t("process","gosu");
x.t("java.io.outputstream","method");
x.t("generated","xml");
x.t("generate","xml");
x.t("takes","serialization");
x.t("afterward","asutfstring");
x.t("although","asutfstring");
x.t("systems","general");
x.t("separators","default");
x.t("hello","comment");
x.t("page","error");
x.t("output","omit");
x.t("output","stream");
x.t("parser","encoding");
x.t("data","always");
x.t("data","byte");
x.t("data","gosu");
x.t("data","methods");
x.t("data","entire");
x.t("data","function");
x.t("data","exporting");
x.t("data","xmlelement");
x.t("information","utf-8");
x.t("graph","xml");
x.t("graph","xmlelement");
x.t("ignores","values");
x.t("values","indent");
x.t("character","byte");
x.t("character","data");
x.t("gw.util.base64util.decode","(base64string)");
x.t("print","method");
x.t("print","element");
x.t("print","print");
x.t("children","elements");
x.t("export","xml");
x.t("export","level");
x.t("export","utf-8");
x.t("http://www.w3.org/tr/rec-xml/","sec-guessing");
x.t("indent","string");
x.t("indent","lineseparator");
x.t("two","spaces");
x.t("newline","ascii");
x.t("note","serialization");
x.t("mentioned","next");
x.t("mark","refer");
x.t("mark","beginning");
x.t("optionally","passing");
x.t("based","xsd");
x.t("reverse","process");
x.t("utf-8","example");
x.t("utf-8","refer");
x.t("utf-8","utf-16");
x.t("order","children");
x.t("order","mark");
x.t("following","example");
x.t("following","properties");
x.t("following","methods");
x.t("signatures","takes");
x.t("element.print","writeto");
x.t("separator","default");
x.t("elements","property");
x.t("elements","element");
x.t("elements","true");
x.t("elements","feature");
x.t("class","includes");
x.t("containing","utf-8-encoded");
x.t("containing","xml");
x.t("general","bytes");
x.t("warning","always");
x.t("returns","array");
x.t("returns","whether");
x.t("compare","contrast");
x.t("serializes","element");
x.t("xsd","type");
x.t("xsd","default");
x.t("xsd","non-xsd-based");
x.t("xsd-based","element");
x.t("xsd-based","elements");
x.t("var","new");
x.t("var","bytes");
x.t("var","text_val=eval");
x.t("var","element.bytes");
x.t("var","base64string");
x.t("var","element.asutfstring");
x.t("serializations","sure");
x.t("passing","xmlserializationoptions");
x.t("effect","element");
x.t("effect","graph");
x.t("encode","binary");
x.t("encode","bytes");
x.t("encode","array");
x.t("object","type");
x.t("object","utf-8");
x.t("object","contains");
x.t("generally","speaking");
x.t("understands","character");
x.t("encoding","details");
x.t("encoding","absence");
x.t("encoding","xml");
x.t("encoding","generated");
x.t("encoding","utf-8");
x.t("specify","encoding");
x.t("contains","mix");
x.t("contains","following");
x.t("contains","xsd-based");
x.t("xmldeclaration","returns");
}
