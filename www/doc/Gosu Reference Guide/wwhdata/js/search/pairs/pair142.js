function FileData_Pairs(x)
{
x.t("example","external");
x.t("example","soap");
x.t("example","ports");
x.t("example","suppose");
x.t("example","weather");
x.t("example","xsd-types");
x.t("example","two");
x.t("example","async_doaction");
x.t("equal","size");
x.t("examples.gosu.wsi","service");
x.t("method","method");
x.t("method","operation");
x.t("method","name");
x.t("method","argument");
x.t("method","handles");
x.t("method","called");
x.t("method","names");
x.t("base64","binary");
x.t("properties","types");
x.t("properties","xml");
x.t("properties","represent");
x.t("creation","intermediary");
x.t("exist","once");
x.t("exist","list");
x.t("exist","words");
x.t("doaction","method");
x.t("avail","able");
x.t("available","port");
x.t("rather","serialized");
x.t("version","method");
x.t("version","gosu");
x.t("version","additionally");
x.t("lists","exist");
x.t("lists","xsd-based");
x.t("within","namespace");
x.t("within","ports");
x.t("within","following");
x.t("subclasses","xmlelement");
x.t("inserts","value");
x.t("create","new");
x.t("binary","data");
x.t("once","gosu");
x.t("once","element.address");
x.t("related","topics");
x.t("instance","type");
x.t("locaiton","example.pl.gs.wsic.myservice.report");
x.t("improve","readability");
x.t("array/list","index");
x.t("element.propertyname","[0]");
x.t("ability","explicitly");
x.t("subpackage","types");
x.t("creates","new");
x.t("creates","list");
x.t("creates","wsdl");
x.t("creates","intermediate");
x.t("creates","types");
x.t("creates","two");
x.t("creates","service");
x.t("example.pl.gs.wsic.myservice.ports.report_p1","example.pl.gs.wsic.myservice.ports.report_p2");
x.t("example.pl.gs.wsic.myservice.ports.report_p1","//");
x.t("tips","working");
x.t("example.pl.gs.wsic.myservice.ports.report_p2","additionally");
x.t("text_val.select","link");
x.t("working","ws-i");
x.t("working","xml");
x.t("necessary","example");
x.t("type","example");
x.t("type","examples.gosu.wsi.geocodeservice");
x.t("type","call");
x.t("external","service");
x.t("calls","details");
x.t("hierarchy","called");
x.t("root_package","wsdl_name_normalized");
x.t("explicitly","reference");
x.t("explicitly","choose");
x.t("packages","example.pl.gs.wsic.myservice.ports.report_p1");
x.t("public","free");
x.t("however","worry");
x.t("form","example");
x.t("multiple","ports");
x.t("followed","underscore");
x.t("followed","port");
x.t("(94114)","print");
x.t("r.description","depending");
x.t("apis","learning");
x.t("apis","ws-i");
x.t("apis","function");
x.t("apis","cases");
x.t("text","gosu");
x.t("automatically","feature");
x.t("automatically","processes");
x.t("property","inserts");
x.t("property","list");
x.t("property","gosu");
x.t("default","lists");
x.t("default","port");
x.t("examples.gosu.wsi.geocodeservice","create");
x.t("removes","duplicate");
x.t("require","authentication");
x.t("link","directly");
x.t("objects","gosu");
x.t("objects","instances");
x.t("element","exist");
x.t("element","list");
x.t("element","name");
x.t("element","hide");
x.t("element","nodes");
x.t("element","information");
x.t("element","contains");
x.t("details","automatic");
x.t("details","asynchronous");
x.t("new","instance");
x.t("new","ws.weather.weather");
x.t("new","address");
x.t("new","types");
x.t("new","my.package.xsdname.elements.address");
x.t("speaking","gosu");
x.t("prefix","example");
x.t("document","gosu");
x.t("size","list");
x.t("hierarchies","include");
x.t("http://ws.cdyne.com/weatherws/weather.asmx","wsdl");
x.t("messsage","gosu");
x.t("need","worry");
x.t("list","exist");
x.t("list","however");
x.t("list","property");
x.t("list","gosu");
x.t("list","addresses");
x.t("list","zero");
x.t("list","exists");
x.t("list","equivalent");
x.t("list","index");
x.t("list","upon");
x.t("list","list-based");
x.t("able","service");
x.t("file","class");
x.t("assign","list");
x.t("assignment","insertion");
x.t("add","wsdl");
x.t("guide","calling");
x.t("api","calls");
x.t("api","types");
x.t("example.pl.gs.wsic","gosu");
x.t("hellop2","gosu");
x.t("remove","hello");
x.t("ws.weather.weather","var");
x.t("overview","learning");
x.t("xml-related","gosu");
x.t("soap","1.1");
x.t("soap","1.2");
x.t("echo","api");
x.t("duplicate","gosu");
x.t("duplicate","service");
x.t("url","http://ws.cdyne.com/weatherws/weather.asmx");
x.t("learning","gosu");
x.t("directly","manipulate");
x.t("directly","page");
x.t("directly","values");
x.t("requires","understand");
x.t("true","size");
x.t("text_val.focus","text_val.select");
x.t("common","types");
x.t("name","example");
x.t("name","followed");
x.t("name","element");
x.t("name","gosu");
x.t("name","async_");
x.t("name","address");
x.t("name","natural");
x.t("name","constructing");
x.t("name","happens");
x.t("name","port");
x.t("name","package");
x.t("name","service");
x.t("creating","xml");
x.t("operation","web");
x.t("path","root_package");
x.t("gosu","creates");
x.t("gosu","working");
x.t("gosu","type");
x.t("gosu","default");
x.t("gosu","automatically");
x.t("gosu","removes");
x.t("gosu","objects");
x.t("gosu","remove");
x.t("gosu","directly");
x.t("gosu","handles");
x.t("gosu","provides");
x.t("gosu","chooses");
x.t("gosu","hides");
x.t("gosu","ws-i");
x.t("gosu","xml");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","exposes");
x.t("gosu","ignores");
x.t("gosu","treats");
x.t("gosu","prefers");
x.t("gosu","using");
x.t("wsdl","within");
x.t("wsdl","root_package");
x.t("wsdl","file");
x.t("wsdl","gosu");
x.t("wsdl","references");
x.t("wsdl","identified");
x.t("wsdl","web");
x.t("wsdl","define");
x.t("wsdl","capitalization");
x.t("wsdl","named");
x.t("wsdl","package");
x.t("references","xsd");
x.t("addresses","following");
x.t("argument","types");
x.t("bytes","text");
x.t("handles","common");
x.t("handles","asynchronous");
x.t("declares","element");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("shortcut","aware");
x.t("zero","[0]");
x.t("exists","creating");
x.t("methods","method");
x.t("methods","special");
x.t("provides","ability");
x.t("provides","weather");
x.t("report_reportp1","example.pl.gs.wsic.myservice.ports.report_hellop2");
x.t("namespace","package");
x.t("async_","prefix");
x.t("identified","either");
x.t("web","services");
x.t("web","service");
x.t("childelement","list");
x.t("address","xsd");
x.t("address","child");
x.t("address","element.address");
x.t("local","methods");
x.t("natural","form");
x.t("understand","gosu");
x.t("manipulate","xml");
x.t("ports","within");
x.t("ports","subpackage");
x.t("ports","gosu");
x.t("ports","wsdl");
x.t("ports","different");
x.t("ports","called");
x.t("ports","cases");
x.t("chooses","default");
x.t("resolution","necessary");
x.t("hides","complexity");
x.t("begin","service");
x.t("error","occurred");
x.t("equivalent","adding");
x.t("choices","gosu");
x.t("something","mostly");
x.t("intermediate","xml");
x.t("automatic","creation");
x.t("automatic","insertion");
x.t("syntax","element.propertyname");
x.t("suppose","method");
x.t("suppose","element");
x.t("suppose","add");
x.t("suppose","ports");
x.t("ws-i","method");
x.t("ws-i","web");
x.t("schemas","wsdl");
x.t("schemas","xsd");
x.t("feature","significantly");
x.t("first","insertion");
x.t("1.1","soap");
x.t("1.1","ports");
x.t("1.1","port");
x.t("weather","public");
x.t("weather","wsdl");
x.t("weather","san");
x.t("weather","result");
x.t("mostly","sunny");
x.t("guidewire_selectall","var");
x.t("number","date");
x.t("1.2","avail");
x.t("1.2","version");
x.t("1.2","ports");
x.t("1.2","port");
x.t("p1","p2");
x.t("function","guidewire_selectall");
x.t("hide","complexity");
x.t(".ports","service_and_port_name");
x.t("underscore","followed");
x.t("p2","service");
x.t("represents","xml");
x.t("insertion","lists");
x.t("insertion","true");
x.t("insertion","words");
x.t("whether","list");
x.t("words","syntax");
x.t("words","suppose");
x.t("processes","ports");
x.t("define","available");
x.t("different","names");
x.t("aware","assign");
x.t("index","equal");
x.t("index","assignment");
x.t("index","notation");
x.t("capitalization","conflict");
x.t("report","echo");
x.t("report","gosu");
x.t("xml","apis");
x.t("xml","element");
x.t("xml","objects");
x.t("xml","document");
x.t("xml","need");
x.t("xml","gosu");
x.t("xml","bytes");
x.t("types","within");
x.t("types","locaiton");
x.t("types","gosu");
x.t("types","web");
x.t("types","number");
x.t("types","return");
x.t("types","defined");
x.t("types","based");
x.t("types","special");
x.t("types","service");
x.t("types","setting");
x.t("reportp1","hellop2");
x.t("calling","web");
x.t("ws","new");
x.t("reference","guide");
x.t("reference","choices");
x.t("xsd:date","object");
x.t("code","creates");
x.t("code","details");
x.t("code","gets");
x.t("return","types");
x.t("xsd-types","gosu");
x.t("schema","xsd");
x.t("intermediary","elements");
x.t("appear","once");
x.t("embedded","wsdl");
x.t("upon","first");
x.t("occurred","messsage");
x.t("shortcuts","referring");
x.t("myservice.wsdl","package");
x.t("constructing","gosu");
x.t("encryption","following");
x.t("instances","subclasses");
x.t("serialized","xsd:date");
x.t("include","method");
x.t("value","list");
x.t("my.package.xsdname.elements.address","information");
x.t("named","report");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","subclass");
x.t("free","web");
x.t("san","francisco");
x.t("depending","weather");
x.t("xmlelement","specific");
x.t("xmlelement","class");
x.t("worry","example");
x.t("worry","whether");
x.t("exposes","property");
x.t("exposes","shortcuts");
x.t("geocodeservice","wsdl");
x.t("service_and_port_name","service_and_port_name");
x.t("service_and_port_name","service");
x.t("services","gosu");
x.t("services","wsdl");
x.t("represent","address");
x.t("represent","child");
x.t("[0]","array/list");
x.t("[0]","new");
x.t("[0]","childelement");
x.t("notation","property");
x.t("example.pl.gs.wsic.myservice.echo","gosu");
x.t("example.pl.gs.wsic.myservice.ports.report_hellop2","//");
x.t("hello","hierarchies");
x.t("authentication","encryption");
x.t("francisco","var");
x.t("page","error");
x.t("nodes","graph");
x.t("data","requires");
x.t("data","directly");
x.t("information","related");
x.t("information","xsd-based");
x.t("graph","automatically");
x.t("wsdl_name_normalized",".ports");
x.t("wsdl_name_normalized","normalized_service_name");
x.t("defined","wsdl");
x.t("defined","schemas");
x.t("ignores","soap");
x.t("happens","begin");
x.t("result","something");
x.t("values","date");
x.t("significantly","improve");
x.t("asynchronous","api");
x.t("asynchronous","methods");
x.t("called","doaction");
x.t("called","p1");
x.t("called","report");
x.t("called","reportp1");
x.t("called","myservice.wsdl");
x.t("called","geocodeservice");
x.t("fully-qualified","type");
x.t("port","example");
x.t("port","creates");
x.t("port","explicitly");
x.t("port","soap");
x.t("port","name");
x.t("port","wsdl");
x.t("port","two");
x.t("port","service");
x.t("normalized_service_name","name");
x.t("normalized_service_name","normalized_service_name");
x.t("choose","port");
x.t("print","r.description");
x.t("date","base64");
x.t("date","object");
x.t("readability","xml-related");
x.t("topics","automatic");
x.t("two","soap");
x.t("two","local");
x.t("two","services");
x.t("note","report_reportp1");
x.t("cases","gosu");
x.t("cases","wsdl");
x.t("treats","index");
x.t("prefers","version");
x.t("based","name");
x.t("subclass","defined");
x.t("list-based","types");
x.t("package","examples.gosu.wsi");
x.t("package","example.pl.gs.wsic");
x.t("package","name");
x.t("package","wsdl");
x.t("call","methods");
x.t("real","example");
x.t("service","require");
x.t("service","overview");
x.t("service","soap");
x.t("service","url");
x.t("service","name");
x.t("service","gosu");
x.t("service","provides");
x.t("service","web");
x.t("service","ports");
x.t("service","data");
x.t("service","defined");
x.t("service","called");
x.t("service","fully-qualified");
x.t("service","real");
x.t("service","service");
x.t("service","following");
x.t("service","generally");
x.t("elements","properties");
x.t("elements","appear");
x.t("elements","represent");
x.t("elements","using");
x.t("special","shortcut");
x.t("special","behavior");
x.t("following","packages");
x.t("following","path");
x.t("following","gosu");
x.t("following","code");
x.t("either","soap");
x.t("example.pl.gs.wsic.myservice.report","example.pl.gs.wsic.myservice.echo");
x.t("class","hierarchy");
x.t("class","represents");
x.t("using","name");
x.t("using","schema");
x.t("setting","properties");
x.t("async_doaction","version");
x.t("conflict","resolution");
x.t("additionally","gosu");
x.t("additionally","port");
x.t("//","duplicate");
x.t("//","note");
x.t("xsd","wsdl");
x.t("xsd","gosu");
x.t("xsd","declares");
x.t("xsd","embedded");
x.t("xsd-based","properties");
x.t("adding","element");
x.t("ws.getcityweatherbyzip","(94114)");
x.t("referring","child");
x.t("child","element");
x.t("child","elements");
x.t("behavior","multiple");
x.t("names","example");
x.t("names","port");
x.t("var","text_val=eval");
x.t("var","ws");
x.t("var","ws.getcityweatherbyzip");
x.t("notable","tips");
x.t("complexity","xml");
x.t("complexity","notable");
x.t("element.address","property");
x.t("element.address","[0]");
x.t("object","rather");
x.t("object","xmlelement");
x.t("contains","child");
x.t("generally","speaking");
x.t("gets","weather");
}
