function FileData_Pairs(x)
{
x.t("example","backslash");
x.t("example","suppose");
x.t("example","rewrite");
x.t("example","following");
x.t("example","var");
x.t("possible","values");
x.t("method","combine");
x.t("method","returns");
x.t("properties","hascontent");
x.t("library","gw.api.util.stringutil");
x.t("terminating","note");
x.t("terminating","following");
x.t("claim","claimnumber");
x.t("full","list");
x.t("within","gosu");
x.t("within","code");
x.t("preferred","string");
x.t("built-in","types");
x.t("create","string");
x.t("ning","ending");
x.t("versus","null");
x.t("describes","common");
x.t("inserts","double-quotation");
x.t("inserts","new");
x.t("inserts","backslash");
x.t("inserts","tab");
x.t("variables","content");
x.t("various","methods");
x.t("enclosing","string");
x.t("s2:string=","var");
x.t("double","quotes");
x.t("double","quote");
x.t("declared","type");
x.t("outputs","plus");
x.t("outputs","content");
x.t("uses","backslash");
x.t("uses","native");
x.t("uses","template");
x.t("forcing","escape");
x.t("line","string");
x.t("line","printed");
x.t("text_val.select","link");
x.t("press","period");
x.t("mycalc","instead");
x.t("mycalc","var");
x.t("bar","information");
x.t("type","homeowners");
x.t("type","checking");
x.t("type","string");
x.t("type","safe");
x.t("type","gw.api.util.stringutil");
x.t("usual","meaning");
x.t("bat","str");
x.t("str.replace","print");
x.t("time","gosu");
x.t("calculation","directly");
x.t("calculation","middle");
x.t("double-quotation","marks");
x.t("double-quotation","mark");
x.t("inside","templates");
x.t("inside","embedded");
x.t("however","gosu");
x.t("however","following");
x.t("property","access");
x.t("text","calculation");
x.t("text","begin");
x.t("text","begins");
x.t("text","end");
x.t("text","expression");
x.t("text","values");
x.t("text","var");
x.t("link","directly");
x.t("distinct","empty");
x.t("access","gosu");
x.t("access","additional");
x.t("objects","gosu");
x.t("new","line");
x.t("horizontal","space");
x.t("homeowners","auto");
x.t("amounts","gosu");
x.t("messsage","gosu");
x.t("utilities","access");
x.t("list","describes");
x.t("list","methods");
x.t("backslash","escape");
x.t("backslash","gosu");
x.t("backslash","string");
x.t("backslash","character");
x.t("backslash","called");
x.t("backslash","following");
x.t("indicates","character");
x.t("signs","embed");
x.t("need","display");
x.t("assignment","uses");
x.t("assignment","rules\\");
x.t("escape","double");
x.t("escape","usual");
x.t("escape","sequence");
x.t("escape","character");
x.t("add","horizontal");
x.t("guide","gosu");
x.t("simple","text");
x.t("simple","gosu");
x.t("api","library");
x.t("three-character","text");
x.t("due","improper");
x.t("remember","variable");
x.t("false","empty");
x.t("false","whether");
x.t("false","expected");
x.t("false","value");
x.t("false","content");
x.t("features","var");
x.t("rules\\","gosu");
x.t("directly","requires");
x.t("directly","gosu");
x.t("directly","string");
x.t("directly","page");
x.t("test","populated");
x.t("true","empty");
x.t("requires","special");
x.t("text_val.focus","text_val.select");
x.t("common","uses");
x.t("gosu","outputs");
x.t("gosu","uses");
x.t("gosu","test");
x.t("gosu","provides");
x.t("gosu","strings");
x.t("gosu","attempts");
x.t("gosu","string");
x.t("gosu","templates");
x.t("gosu","types");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","return");
x.t("gosu","expression");
x.t("gosu","treats");
x.t("gosu","tester");
x.t("populated","string");
x.t("logging","\\n\\");
x.t("surrounded","quote");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","api");
x.t("methods","string");
x.t("methods","manipulate");
x.t("methods","in-line");
x.t("provides","various");
x.t("provides","two");
x.t("provides","alternative");
x.t("plus","equals");
x.t("checking","ensure");
x.t("absence","object");
x.t("combine","null-tolerant");
x.t("strings","backslash");
x.t("strings","gosu");
x.t("strings","characters");
x.t("strings","sequence");
x.t("escaping","internal");
x.t("escaping","special");
x.t("address","123");
x.t("attempts","coerce");
x.t("string","variables");
x.t("string","enclosing");
x.t("string","text");
x.t("string","objects");
x.t("string","utilities");
x.t("string","backslash");
x.t("string","assignment");
x.t("string","add");
x.t("string","simple");
x.t("string","gosu");
x.t("string","methods");
x.t("string","string");
x.t("string","characters");
x.t("string","hold");
x.t("string","literal");
x.t("string","function");
x.t("string","templates");
x.t("string","define");
x.t("string","null");
x.t("string","value");
x.t("string","template");
x.t("string","data");
x.t("string","values");
x.t("string","following");
x.t("string","non-empty");
x.t("string","remainder");
x.t("string","without");
x.t("string","object");
x.t("empty","false");
x.t("empty","true");
x.t("empty","string");
x.t("empty",".empty");
x.t("empty","null");
x.t("empty","var");
x.t("attempt","escape");
x.t("characters","example");
x.t("characters","create");
x.t("characters","inside");
x.t("characters","gosu");
x.t("characters","strings");
x.t("characters","string");
x.t("characters","begin");
x.t("understand","value");
x.t("manipulate","strings");
x.t("prints","cat");
x.t("in-line","string");
x.t("addition","simple");
x.t("two-character","text");
x.t("three","print");
x.t("begin","ning");
x.t("begin","expression");
x.t("auto","string");
x.t("null-tolerant","property");
x.t(".hascontent","print");
x.t("small","amounts");
x.t("quotes","var");
x.t("error","occurred");
x.t("display","text");
x.t("hold","value");
x.t("hascontent","method");
x.t("hascontent","empty");
x.t("period","full");
x.t("syntax","quote");
x.t("syntax","embed");
x.t("suppose","need");
x.t("france","print");
x.t("feature","called");
x.t("space","line");
x.t("concise","code");
x.t("guidewire_selectall","var");
x.t(".empty","code");
x.t(".empty","print");
x.t("literal","directly");
x.t("literal","gosu");
x.t("activity","assignment");
x.t("multiple-line","code");
x.t("function","guidewire_selectall");
x.t("quote","signs");
x.t("quote","characters");
x.t("represents","absence");
x.t("whether","variable");
x.t("templates","example");
x.t("templates","inserts");
x.t("templates","gosu");
x.t("templates","escaping");
x.t("templates","addition");
x.t("templates","define");
x.t("templates","cases");
x.t("templates","using");
x.t("define","string");
x.t("combination","backslash");
x.t("different","template");
x.t("safe","expression");
x.t("middle","text");
x.t("words","following");
x.t("cat","string");
x.t("begins","new");
x.t("instead","multiple-line");
x.t("types","built-in");
x.t("types","string");
x.t("gw.api.util.stringutil","type");
x.t("gw.api.util.stringutil","gosu");
x.t("handling","used");
x.t("compile","time");
x.t("coerce","result");
x.t("internal","double");
x.t("marks","possible");
x.t("important","remember");
x.t("important","understand");
x.t("expected","methods");
x.t("(str)","prints");
x.t("rewrite","previous");
x.t("reference","distinct");
x.t("reference","guide");
x.t("code","within");
x.t("code","outputs");
x.t("code","directly");
x.t("code","expression");
x.t("code","embed");
x.t("code","var");
x.t("end","expression");
x.t("invalid","due");
x.t("return","false");
x.t("return","value");
x.t("s3:string=","hello");
x.t("previous","example");
x.t("variable","declared");
x.t("variable","gosu");
x.t("variable","holds");
x.t("embedded","code");
x.t("embedded","expression");
x.t("printed","inserts");
x.t("printed","examples");
x.t("ensure","embedded");
x.t("occurred","messsage");
x.t("null","method");
x.t("null","empty");
x.t("null","represents");
x.t("null","important");
x.t("value","type");
x.t("value","null");
x.t("value","two");
x.t("additional","string");
x.t("main","street");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("holds","empty");
x.t("native","type");
x.t("myvalue","however");
x.t("hello","print");
x.t("template","features");
x.t("template","styles");
x.t("template","style");
x.t("template","var");
x.t("styles","compile");
x.t("expression","example");
x.t("expression","string");
x.t("expression","attempt");
x.t("expression","two-character");
x.t("expression","return");
x.t("expression","valid");
x.t("valid","type");
x.t("valid","gosu");
x.t("(s)","within");
x.t("foo","var");
x.t("page","error");
x.t("sequence","example");
x.t("sequence","inserts");
x.t("sequence","characters");
x.t("sequence","result");
x.t("s1:string=null","var");
x.t("str","bat");
x.t("str","str.replace");
x.t("data","type");
x.t("data","feature");
x.t("information","gosu");
x.t("equals","mycalc");
x.t("equals","information");
x.t("equals","print");
x.t("equals","style");
x.t("meaning","character");
x.t("result","inserts");
x.t("result","type");
x.t("examples","claim");
x.t("claimnumber","var");
x.t("values","surrounded");
x.t("values","string");
x.t("values","words");
x.t("values","important");
x.t("print","empty");
x.t("print","three");
x.t("print","(str)");
x.t("print","variable");
x.t("print","(s)");
x.t("print","two");
x.t("print","var");
x.t("print","content");
x.t("called","escape");
x.t("called","templates");
x.t("character","indicates");
x.t("character","directly");
x.t("character","string");
x.t("character","combination");
x.t("character","called");
x.t("character","insert");
x.t("global","activity");
x.t("two","france");
x.t("two","different");
x.t("two","interchangeable");
x.t("note","work");
x.t("123","main");
x.t("treats","strings");
x.t("mark","string");
x.t("work","inside");
x.t("cases","escape");
x.t("street","logging");
x.t("interchangeable","values");
x.t("ending","double-quotation");
x.t("following","list");
x.t("following","string");
x.t("following","syntax");
x.t("following","concise");
x.t("following","invalid");
x.t("following","valid");
x.t("following","character");
x.t("special","characters");
x.t("special","syntax");
x.t("special","handling");
x.t("used","escape");
x.t("style","preferred");
x.t("style","however");
x.t("style","three-character");
x.t("using","special");
x.t("improper","escaping");
x.t("non-empty","string");
x.t("compare","behavior");
x.t("returns","false");
x.t("remainder","text");
x.t("tab","string");
x.t("alternative","template");
x.t("behavior","properties");
x.t("without","terminating");
x.t("without","forcing");
x.t("var","s2:string=");
x.t("var","mycalc");
x.t("var","bar");
x.t("var","text_val=eval");
x.t("var","plus");
x.t("var","address");
x.t("var","s3:string=");
x.t("var","myvalue");
x.t("var","hello");
x.t("var","foo");
x.t("var","s1:string=null");
x.t("var","str");
x.t("var","var");
x.t("embed","calculation");
x.t("embed","gosu");
x.t("embed","small");
x.t("insert","double-quotation");
x.t("\\n\\","global");
x.t("content","false");
x.t("content","true");
x.t("content","empty");
x.t("content",".hascontent");
x.t("object","versus");
x.t("object","hascontent");
x.t("object","reference");
x.t("object","compare");
x.t("tester","press");
}
