function FileData_Pairs(x)
{
x.t("example","hyphens");
x.t("example","element");
x.t("example","choice");
x.t("example","gosu");
x.t("example","suppose");
x.t("example","myprop");
x.t("example","consider");
x.t("example","numeric");
x.t("example","mentioned");
x.t("root","xsd");
x.t("complex","type");
x.t("referencing","additional");
x.t("equal","size");
x.t("properties","example");
x.t("properties","start");
x.t("properties","gosu");
x.t("properties","methods");
x.t("properties","whether");
x.t("properties","types");
x.t("properties","represent");
x.t("properties","called");
x.t("properties","immediately");
x.t("properties","using");
x.t("properties","xsd-based");
x.t("integers","circumstances");
x.t("groupb_a_c","elements");
x.t("sion","list");
x.t("prepends","underscore");
x.t("child2elem","xml.child2_elem");
x.t("exist","once");
x.t("exist","list");
x.t("exist","gosu");
x.t("xsd:list","itemtype=");
x.t("xsd:list","xsd:schema");
x.t("defines","child");
x.t(".anonymous.elements","pathfromroot");
x.t("just","behavior");
x.t("pattern","convert");
x.t("taking","approach");
x.t("elementname","represents");
x.t("elementname","--");
x.t("lists","exist");
x.t("lists","new");
x.t("lists","gosu");
x.t("lists","using");
x.t("every","child");
x.t("hyphens","disallowed");
x.t("within","name");
x.t("wish","access");
x.t("describes","strict");
x.t("table","property");
x.t("table","summarizes");
x.t("table","definition");
x.t("table","note");
x.t("table","child");
x.t("embeds","path");
x.t("anonymous.elements",".pathfromroot");
x.t("uppercase","gosu");
x.t("inserts","value");
x.t("/child1","/element1");
x.t("/child1","child1");
x.t("once","gosu");
x.t("once","top-level");
x.t("once","says");
x.t("once","element.address");
x.t("always","element");
x.t("always","attribute");
x.t("instance","child");
x.t("/child2","/element1");
x.t("/child2","child2");
x.t("performs","slight");
x.t("name=","child1");
x.t("name=","child2");
x.t("name=","element1");
x.t("array/list","index");
x.t("element.propertyname","[0]");
x.t("improve","readability");
x.t("/element1","----------");
x.t("/element1","works");
x.t("/element1","xsd");
x.t("----------","xml.child1");
x.t("----------","xml");
x.t("creates","properties");
x.t("creates","type");
x.t("creates","new");
x.t("creates","list");
x.t("creates","intermediate");
x.t("creates","rightmost");
x.t("topic","possibility");
x.t("topic","schema");
x.t("uppercases","following");
x.t("renames","item");
x.t("try","actual");
x.t("xsd:complextype","xsd:sequence");
x.t("xsd:complextype","xsd:choice");
x.t("version=","1.0");
x.t("derived","list");
x.t("declared","lists");
x.t("declared","java.util.list");
x.t("declared","xsd");
x.t("last","part");
x.t("uses","childname/childname_elem");
x.t("uses","xsd");
x.t("pair","child");
x.t("later","decide");
x.t("aspect","normalization");
x.t("xml.print","outputs");
x.t("xml.print","prints");
x.t("xml.print","print");
x.t("outputs","insertion");
x.t("text_val.select","link");
x.t("singular","example");
x.t("type","taking");
x.t("type","singular");
x.t("type","hierarchy");
x.t("type","property");
x.t("type","java.lang.integer");
x.t("type","simple");
x.t("type","no");
x.t("type","name");
x.t("type","gosu");
x.t("type","schema.childname");
x.t("type","natural");
x.t("type","top-level");
x.t("type","schema");
x.t("type","--");
x.t("type","xsd:anytype");
x.t("type","schema.elementname");
x.t("type","xsd:int");
x.t("type","system");
x.t("type","names");
x.t("type","schema.anonymous.elements.element1_child1");
x.t("type","var");
x.t("type","schema.anonymous.elements.element1_child2");
x.t("basic","xmlelement");
x.t(".anonymous.types.simple","typename");
x.t("providing","access");
x.t("change","every");
x.t("change","following");
x.t("http://www.w3.org/2001/xmlschema","xsd:element");
x.t("/xsd:complextype","/xsd:element");
x.t("times","property");
x.t("hierarchy","think");
x.t("hierarchy","gosu");
x.t("slight","normalization");
x.t("packages","properties");
x.t("packages","become");
x.t("however","top-level");
x.t("however","worry");
x.t("parsing","--");
x.t("xmlns:xsd=","http://www.w3.org/2001/xmlschema");
x.t("multiple","times");
x.t("property","example");
x.t("property","inserts");
x.t("property","pair");
x.t("property","type");
x.t("property","element");
x.t("property","list");
x.t("property","simple");
x.t("property","element.childname");
x.t("property","name");
x.t("property","gosu");
x.t("property","appear");
x.t("property","element.childname_elem");
x.t("property","becomes");
x.t("property","_elem");
x.t("property","element.attributename");
x.t("property","integer");
x.t("property","names");
x.t("plex","type");
x.t("original","schema");
x.t("convert","simpletype");
x.t("lowercase","gosu");
x.t("lowercase","types");
x.t("removes","invalid");
x.t("removes","character");
x.t("default","lists");
x.t("default","type");
x.t("automatically","creates");
x.t("needed","feature");
x.t("link","directly");
x.t("new","packagename.myschema.element1");
x.t("new","address");
x.t("new","syntax");
x.t("new","types");
x.t("new","my.package.xsdname.elements.address");
x.t("new","schema.element1");
x.t("access","original");
x.t("access","element");
x.t("access","child");
x.t("access","object");
x.t("getting","setting");
x.t("element","complex");
x.t("element","exist");
x.t("element","declared");
x.t("element","change");
x.t("element","property");
x.t("element","list");
x.t("element","childname");
x.t("element","simple");
x.t("element","name");
x.t("element","syntax");
x.t("element","child2_elem");
x.t("element","schema");
x.t("element","named");
x.t("element","defined");
x.t("element","two");
x.t("element","anonymous");
x.t("element","separated");
x.t("element","xsd");
x.t("element","child");
x.t("element","names");
x.t("element","object");
x.t("element","contains");
x.t("items","list");
x.t("items","automatic");
x.t("think","representing");
x.t("start","characters");
x.t("start","initial");
x.t("/xsd:element","/xsd:schema");
x.t("/xsd:element","/xsd:sequence");
x.t("java.lang.integer","xml.child2");
x.t("java.lang.integer","child");
x.t("objects","gosu");
x.t("choice","defines");
x.t("choice","xsd:choice");
x.t("packagename.myschema.element1","var");
x.t("size","list");
x.t("/xsd:choice","/xsd:complextype");
x.t("messsage","gosu");
x.t("indicates","properties");
x.t("list","example");
x.t("list","integers");
x.t("list","properties");
x.t("list","exist");
x.t("list","xsd:list");
x.t("list","however");
x.t("list","property");
x.t("list","assign");
x.t("list","addresses");
x.t("list","zero");
x.t("list","exists");
x.t("list","equivalent");
x.t("list","index");
x.t("list","upon");
x.t("list","integer");
x.t("ment","schema");
x.t("need","schema");
x.t("combines","names");
x.t("standards","packages");
x.t("finds","invalid");
x.t("hyphen","gosu");
x.t("strict","valid");
x.t("childname","harder");
x.t("childname","top-level");
x.t("childname","represent");
x.t("maxoccurs","attribute");
x.t("maxoccurs","setting");
x.t("(non-top-level)","element");
x.t("(non-top-level)","sim");
x.t("(non-top-level)","ele");
x.t("(non-top-level)","com");
x.t("(non-top-level)","attri");
x.t("group","named");
x.t("during","parsing");
x.t("add","element");
x.t("add","attributes");
x.t("assign","list");
x.t("assignment","becomes");
x.t("guide","gosu");
x.t("harder","understand");
x.t("simple","type");
x.t("simple","underscore");
x.t("simple","types");
x.t("simple","content");
x.t("xsd:sequence","xsd:element");
x.t("xsd:sequence","maxoccurs=");
x.t("recommended","load");
x.t("xml-related","gosu");
x.t("xml-related","code");
x.t("become","lowercase");
x.t("become","list");
x.t("util.schemaaccess","special");
x.t("xml.child2_elem","//");
x.t("possibility","exists");
x.t("directly","page");
x.t("summarizes","automatic");
x.t("circumstances","property");
x.t("true","size");
x.t("true","anonymous");
x.t("converts","invalid");
x.t("unbounded","xsd:element");
x.t("unbounded","/xsd:sequence");
x.t("text_val.focus","text_val.select");
x.t("element.childname","basic");
x.t("element.childname","discus");
x.t("path","root");
x.t("path","fromroot");
x.t("path","schema");
x.t("name","embeds");
x.t("name","type");
x.t("name","combines");
x.t("name","parentname");
x.t("name","address");
x.t("name","discus");
x.t("name","appear");
x.t("name","--");
x.t("name","context");
x.t("name","defined");
x.t("name","gets");
x.t("sim","ple");
x.t("definition","path");
x.t("common","pattern");
x.t("no","simple");
x.t("no","gosu");
x.t("no","characters");
x.t("myprop2","myprop3");
x.t("creating","xml");
x.t("[1]","xml.child1");
x.t("gosu","performs");
x.t("gosu","creates");
x.t("gosu","uses");
x.t("gosu","type");
x.t("gosu","packages");
x.t("gosu","removes");
x.t("gosu","default");
x.t("gosu","automatically");
x.t("gosu","finds");
x.t("gosu","xml-related");
x.t("gosu","converts");
x.t("gosu","common");
x.t("gosu","syntax");
x.t("gosu","appends");
x.t("gosu","xml");
x.t("gosu","changes");
x.t("gosu","simply");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","null");
x.t("gosu","exposes");
x.t("gosu","generated");
x.t("gosu","context");
x.t("gosu","special");
x.t("gosu","class");
x.t("gosu","xsd");
x.t("gosu","naming");
x.t("wsdl","gosu");
x.t("myprop3","examples");
x.t("addresses","following");
x.t("parentname","childname");
x.t("groupb","pathfromroot");
x.t("part","pathfromroot");
x.t("declares","element");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","element.children");
x.t("xsd:choice","xsd:element");
x.t("xsd:choice","xsd");
x.t(".anonymous.types.complex","typename");
x.t("schema.childname","anonymous");
x.t("prominent","aspect");
x.t("zero","[0]");
x.t("exists","syntax");
x.t("exists","child");
x.t("produced","type");
x.t("decide","add");
x.t("childelement","list");
x.t("address","xsd");
x.t("address","child");
x.t("address","element.address");
x.t("itemtype=","xsd:int");
x.t("natural","property");
x.t("natural","gosu");
x.t("groupb_a","true");
x.t("discus","sion");
x.t("childname/childname_elem","property");
x.t("xsd:element","name=");
x.t("shorthand","syntax");
x.t("understand","natural");
x.t("understand","typical");
x.t("attribute","property");
x.t("attribute","name");
x.t("attribute","schema");
x.t("attribute","value");
x.t("earlier","table");
x.t("earlier","topic");
x.t("characters","no");
x.t("characters","gosu");
x.t("characters","remain");
x.t("remain","gosu");
x.t("xml.child1","xml.print");
x.t("xml.child1","[1]");
x.t("xml.child1","null");
x.t("xml.child1","[0]");
x.t("xml.child1","//");
x.t("xml.child1","[2]");
x.t("prints","following");
x.t("pathfromroot","groupb_a_c");
x.t("pathfromroot","always");
x.t("pathfromroot","groupb_a");
x.t("pathfromroot","earlier");
x.t("pathfromroot","important");
x.t("pathfromroot","placeholder");
x.t("underscores","example");
x.t("child1","/child1");
x.t("child1","property");
x.t("child1","xml.child1");
x.t("child1","--");
x.t("child1","type=");
x.t("child1","xsd:simpletype");
x.t("xml.child2","xml.print");
x.t("xml.child2","//");
x.t("error","occurred");
x.t("strongly","recommended");
x.t("ele","ment");
x.t("child2","/child2");
x.t("child2","property");
x.t("child2","element");
x.t("child2","xml.child2");
x.t("child2","type=");
x.t("review","following");
x.t("equivalent","adding");
x.t("syntax","element.propertyname");
x.t("syntax","access");
x.t("syntax","creating");
x.t("syntax","becomes");
x.t("syntax","inserting");
x.t("automatic","insertion");
x.t("automatic","xsd-based");
x.t("suppose","element");
x.t("suppose","anonymous");
x.t("suppose","following");
x.t("suppose","xsd");
x.t("suppose","child");
x.t(".types.simple","typename");
x.t("appends","numbers");
x.t("intermediate","xml");
x.t("1.0","element1");
x.t("top-level","complex");
x.t("top-level","element");
x.t("top-level","simple");
x.t("top-level","attribute");
x.t("top-level","(non-anonymous)");
x.t("top-level","elements");
x.t(".anonymous.attributes","pathfromroot");
x.t("schemas","during");
x.t("first","insertion");
x.t("first","character");
x.t("feature","significantly");
x.t("guidewire_selectall","var");
x.t(".types.complex","typename");
x.t("function","guidewire_selectall");
x.t("parent","element");
x.t("parent","child");
x.t("approach","no");
x.t("underscore","change");
x.t("underscore","normalization");
x.t("underscore","duplicates");
x.t("underscore","entirely");
x.t("represents","element");
x.t("represents","fully-qualified");
x.t("whether","property");
x.t("whether","list");
x.t("insertion","lists");
x.t("insertion","true");
x.t("insertion","words");
x.t("insertion","insertion");
x.t("insertion","xml");
x.t("insertion","{xml.child1.count}");
x.t("com","plex");
x.t("normalization","gosu");
x.t("normalization","capitalization");
x.t("normalization","names");
x.t("words","add");
x.t("words","suppose");
x.t("powerful","xml");
x.t("java.util.list","parameterized");
x.t("capitalization","conform");
x.t("examples.pl.gosu.xml","xsd:schema");
x.t("index","equal");
x.t("index","assignment");
x.t("index","notation");
x.t("types","example");
x.t("types","properties");
x.t("types","derived");
x.t("types","start");
x.t("types","gosu");
x.t("types","function");
x.t("types","powerful");
x.t("types","xsd-based");
x.t("xml","version=");
x.t("xml","new");
x.t("xml","objects");
x.t("xml","gosu");
x.t("xml","generate");
x.t("xml","elements");
x.t("xml","xsd-based");
x.t("rightmost","column");
x.t("capitals","properties");
x.t("capitals","type");
x.t("changes","example");
x.t("important","need");
x.t("important","pathfromroot");
x.t("important","xsds");
x.t("initial","capitals");
x.t("simply","prepends");
x.t("simply","renames");
x.t("works","simple");
x.t("reference","guide");
x.t("code","example");
x.t("code","creates");
x.t("code","uses");
x.t("code","xml-related");
x.t("code","insertion");
x.t("code","breaks");
x.t("code","significantly");
x.t("code","var");
x.t("elementa","elementb");
x.t(".elements","elementname");
x.t("invalid","within");
x.t("invalid","characters");
x.t("invalid","first");
x.t("invalid","character");
x.t("myprop","myprop2");
x.t("elementb","declared");
x.t("elementb","gosu");
x.t("fromroot","last");
x.t("child2_elem","property");
x.t("element.children","element.getchild");
x.t("schema","referencing");
x.t("schema",".anonymous.elements");
x.t("schema","elementname");
x.t("schema","anonymous.elements");
x.t("schema","type");
x.t("schema",".anonymous.types.simple");
x.t("schema","access");
x.t("schema","util.schemaaccess");
x.t("schema",".anonymous.types.complex");
x.t("schema","produced");
x.t("schema",".types.simple");
x.t("schema",".anonymous.attributes");
x.t("schema",".types.complex");
x.t("schema","represents");
x.t("schema","important");
x.t("schema",".elements");
x.t("schema","include");
x.t("schema","special");
x.t("schema",".attributes");
x.t("appear","once");
x.t("appear","multiple");
x.t("simplecontent","add");
x.t("/xsd:schema","review");
x.t("/xsd:schema","output");
x.t("/xsd:schema","run");
x.t("/xsd:schema","following");
x.t("exact","gosu");
x.t("greater","gosu");
x.t("greater","child");
x.t("actual","examples");
x.t("upon","first");
x.t("occurred","messsage");
x.t("shortcuts","inserting");
x.t("element.childname_elem","top-level");
x.t(".pathfromroot","earlier");
x.t("null","xml.child2");
x.t("null","words");
x.t("consider","following");
x.t("attri","bute");
x.t("include","schema");
x.t("discussion","list");
x.t("easier","read");
x.t("value","list");
x.t("value","greater");
x.t("value","discussion");
x.t("value","child");
x.t("named","groupb");
x.t("named","pathfromroot");
x.t("named","child2");
x.t("additional","schemas");
x.t("unusual","case");
x.t("my.package.xsdname.elements.address","important");
x.t("running","exact");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("--","every");
x.t("--","default");
x.t("--","xsd:element");
x.t("--","attribute");
x.t("--","top-level");
x.t("--","schema");
x.t("--","anonymous");
x.t("--","child");
x.t("(non-anonymous)","element");
x.t("element\u2019s","value");
x.t("generate","xsd");
x.t("putting","gosu");
x.t("xmlelement","properties");
x.t("xmlelement","instance");
x.t("xmlelement","child2");
x.t("exposes","property");
x.t("exposes","list");
x.t("exposes","shortcuts");
x.t("generated","name");
x.t("generated","xsd-based");
x.t("xsd:anytype","--");
x.t("type=","xsd:int");
x.t("worry","whether");
x.t("{xml.child1.count}","xml.print");
x.t("{xml.child1.count}","xml.child1");
x.t("valid","example");
x.t("valid","xml");
x.t("read","understand");
x.t("represent","address");
x.t("represent","names");
x.t("represent","child");
x.t("says","declared");
x.t("bute","schema");
x.t("breaks","later");
x.t("conform","gosu");
x.t("[0]","array/list");
x.t("[0]","new");
x.t("[0]","childelement");
x.t("[0]","xml.child1");
x.t("notation","property");
x.t("page","error");
x.t("ple","type");
x.t("attributename","--");
x.t("context","hyphen");
x.t("context","gosu");
x.t("/xsd:sequence","/xsd:complextype");
x.t("/xsd:sequence","/xsd:choice");
x.t("output","running");
x.t("data","strongly");
x.t("typical","getting");
x.t("becomes","list");
x.t("becomes","insertion");
x.t("becomes","list-based");
x.t("schema.elementname","however");
x.t("duplicates","gosu");
x.t("xsd:schema","xmlns:xsd=");
x.t("_elem","suffix");
x.t("maxoccurs=","unbounded");
x.t("schema.element1","xml.child1");
x.t("schema.element1","print");
x.t("defined","wsdl");
x.t("defined","xsd");
x.t("placeholder","generated");
x.t("removing","start");
x.t("examples","suppose");
x.t("examples","xsd");
x.t("significantly","improve");
x.t("significantly","easier");
x.t("values","elements");
x.t("utility","object");
x.t("disallowed","removed");
x.t("letter","gosu");
x.t("case","removing");
x.t("case","child");
x.t("fully-qualified","path");
x.t("called","elementa");
x.t("element.attributename","--");
x.t("character","uppercase");
x.t("character","uppercases");
x.t("character","lowercase");
x.t("character","first");
x.t("character","underscore");
x.t("character","invalid");
x.t("character","unusual");
x.t("character","otherwise");
x.t("character","following");
x.t("print","----------");
x.t("print","insertion");
x.t("xsd:simpletype","xsd:list");
x.t("column","indicates");
x.t("integer","list");
x.t("integer","maxoccurs");
x.t("two","levels");
x.t("note","gosu");
x.t("note","following");
x.t("otherwise","valid");
x.t("readability","xml-related");
x.t("inserting","items");
x.t("cases","gosu");
x.t("numeric","digit");
x.t("element1","xsd:complextype");
x.t("element1","child1");
x.t("element1","child2");
x.t("itself","wish");
x.t("mentioned","earlier");
x.t("xsd:int","maxoccurs");
x.t("xsd:int","xsd:sequence");
x.t("xsd:int","/xsd:sequence");
x.t("xsd:int","maxoccurs=");
x.t("xsd:int","/xsd:simpletype");
x.t("immediately","table");
x.t("entirely","invalid");
x.t("numbers","example");
x.t("package","examples.pl.gosu.xml");
x.t("subclass","xmlelement");
x.t("list-based","property");
x.t("system","putting");
x.t("elements","topic");
x.t("elements","last");
x.t("elements","needed");
x.t("elements","become");
x.t("elements","element.childname");
x.t("elements","gosu");
x.t("elements","appear");
x.t("elements","represent");
x.t("elements","following");
x.t("elements","names");
x.t("following","table");
x.t("following","gosu");
x.t("following","child1");
x.t("following","xml");
x.t("following","code");
x.t("following","letter");
x.t("following","character");
x.t("following","xsd");
x.t("anonymous","element");
x.t("anonymous","(non-top-level)");
x.t("anonymous","child");
x.t("separated","underscores");
x.t("separated","underscore");
x.t("special","shorthand");
x.t("special","schema");
x.t("special","utility");
x.t("digit","gosu");
x.t("run","following");
x.t("class","hierarchy");
x.t("using","xsds");
x.t("xsds","properties");
x.t("xsds","gosu");
x.t("xsds","types");
x.t("setting","gosu");
x.t("setting","values");
x.t("//","property");
x.t("//","java.lang.integer");
x.t("//","schema.anonymous.elements.element1_child1");
x.t("//","schema.anonymous.elements.element1_child2");
x.t("[2]","print");
x.t("xsd-based","properties");
x.t("xsd-based","names");
x.t("xsd","example");
x.t("xsd","describes");
x.t("xsd","type");
x.t("xsd","choice");
x.t("xsd","list");
x.t("xsd","maxoccurs");
x.t("xsd","group");
x.t("xsd","gosu");
x.t("xsd","declares");
x.t("xsd","data");
x.t("xsd","xsd:schema");
x.t("xsd","package");
x.t("xsd","names");
x.t("xsd","var");
x.t("levels","root");
x.t("adding","element");
x.t("load","xsd");
x.t("child","property");
x.t("child","element");
x.t("child","named");
x.t("child","element\u2019s");
x.t("child","elements");
x.t("element.getchild","childname");
x.t("names","try");
x.t("names","element");
x.t("names","gosu");
x.t("names","prominent");
x.t("names","parent");
x.t("names","elementa");
x.t("names","cases");
x.t("names","separated");
x.t("names","contains");
x.t("behavior","child");
x.t("simpletype","simplecontent");
x.t("schema.anonymous.elements.element1_child1","subclass");
x.t("schema.anonymous.elements.element1_child1","var");
x.t("/xsd:simpletype","/xsd:element");
x.t("var","child2elem");
x.t("var","text_val=eval");
x.t("var","child1");
x.t("var","child2");
x.t("var","xml");
x.t("parameterized","type");
x.t(".attributes","attributename");
x.t("schema.anonymous.elements.element1_child2","automatic");
x.t("schema.anonymous.elements.element1_child2","note");
x.t("suffix","case");
x.t("representing","schema");
x.t("naming","standards");
x.t("removed","gosu");
x.t("element.address","property");
x.t("element.address","[0]");
x.t("typename","--");
x.t("object","providing");
x.t("object","schema");
x.t("object","xmlelement");
x.t("object","itself");
x.t("content","just");
x.t("content","child");
x.t("attributes","element");
x.t("contains","invalid");
x.t("contains","child");
x.t("item","simple");
x.t("gets","value");
}
