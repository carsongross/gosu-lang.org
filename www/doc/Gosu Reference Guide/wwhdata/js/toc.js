function  WWHBookData_AddTOCEntries(P)
{
var A=P.fN("About This Document","1");
var B=A.fN("Intended Audience","1#1315821");
B=A.fN("Downloads, Technical Questions, and Submitting Feedback","1#1329476");
B=A.fN("Conventions In This Document","1#1333816");
A=P.fN("Gosu Introduction","2");
B=A.fN("Welcome to Gosu","3");
var C=B.fN("Control Flow","3#1437383");
C=B.fN("Blocks","3#1469415");
C=B.fN("Enhancements","3#1435182");
C=B.fN("Collections","3#1441186");
C=B.fN("Access to Java Types","3#1435102");
C=B.fN("Gosu Classes and Properties","3#1440296");
C=B.fN("Interfaces","3#1450798");
C=B.fN("List and Array Expansion Operator *.","3#1450589");
C=B.fN("Comparisons","3#1452648");
C=B.fN("Case Sensitivity","3#1450590");
C=B.fN("Compound Assignment Statements","3#1454915");
C=B.fN("Delegating Interface Implementation with Composition","3#1457296");
C=B.fN("Concurrency","3#1456854");
C=B.fN("Exceptions","3#1457070");
C=B.fN("Annotations","3#1458452");
C=B.fN("Gosu Templates","3#1457886");
C=B.fN("Native XML and XSD Support","3#1460816");
C=B.fN("Native Web Service Support Using a WSDL Type Loader","3#1460937");
C=B.fN("Gosu Character Set","3#1484203");
B=A.fN("Running Gosu Programs and Calling Other Classes","4");
B=A.fN("More About the Gosu Type System","5");
C=B.fN("Compile Time Error Prevention","6");
C=B.fN("Type Inference","7");
C=B.fN("Intelligent Code Completion and Other Gosu Editor Tools","8");
C=B.fN("Null Safety for Properties Other Operators","9");
C=B.fN("Generics in Gosu","10");
C=B.fN("Gosu Primitives Types","11");
C=B.fN("Gosu Type Loaders","12");
B=A.fN("Gosu Case Sensitivity","13");
B=A.fN("Gosu Statement Terminators","14");
B=A.fN("Gosu Comments","15");
B=A.fN("Gosu Reserved Words","16");
B=A.fN("Notable Differences Between Gosu and Java","17");
B=A.fN("Get Ready for Gosu","18");
A=P.fN("Getting Started with Gosu Community Release","19");
B=A.fN("System Requirements","19#1455061");
B=A.fN("Gosu and IntelliJ IDEA","20");
B=A.fN("Installing Gosu as Command Line Tool","21");
B=A.fN("Advanced Examples","22");
C=B.fN("Servlet Example","22#1478621");
C=B.fN("Hibernate Database Example","22#1471689");
B=A.fN("Dynamic Type Example","23");
A=P.fN("Gosu Programs and Command Line Tools","24");
B=A.fN("Gosu Command Line Tool Basics","25");
C=B.fN("Command Line Tool Options","25#2182333");
C=B.fN("Writing a Simple Gosu Program","25#2180168");
B=A.fN("The Structure of a Gosu Program","26");
C=B.fN("Metaline as First Line","26#2182879");
C=B.fN("Functions in a Gosu Program","26#2182773");
C=B.fN("Setting the Class Path to Call Other Gosu or Java Classes","26#2183011");
B=A.fN("Command Line Arguments","27");
B=A.fN("Advanced Class Loading Registry","28");
B=A.fN("The Self-Contained Gosu Editor","29");
B=A.fN("Gosu Interactive Shell","30");
B=A.fN("Helpful APIs for Command Line Gosu Programs","31");
A=P.fN("Gosu Types","32");
B=A.fN("Built-in Types","33");
C=B.fN("Array","34");
C=B.fN("Boolean","35");
C=B.fN("DateTime","36");
C=B.fN("Number","37");
C=B.fN("Object","38");
C=B.fN("String","39");
C=B.fN("Type","40");
C=B.fN("Primitive Types","41");
B=A.fN("Access to Java Types","42");
B=A.fN("Arrays","43");
C=B.fN("Java-based Lists as Arrays","43#1441480");
C=B.fN("Array Expansion","43#1441521");
B=A.fN("Object Instantiation and Properties","44");
C=B.fN("Creating New Objects","44#1441638");
C=B.fN("Assigning Object Properties","44#1441650");
C=B.fN("Accessing Object Properties","44#1441662");
C=B.fN("Accessing Object Methods","44#1441682");
C=B.fN("Accessing Object Arrays","44#1441721");
B=A.fN("Numeric, Binary, and Hex Literals","45");
A=P.fN("Gosu Operators and Expressions","46");
B=A.fN("Gosu Operators","47");
C=B.fN("Operator Precedence","48");
B=A.fN("Standard Gosu Expressions","49");
B=A.fN("Arithmetic Expressions","50");
B=A.fN("Equality Expressions","51");
B=A.fN("Evaluation Expressions","52");
B=A.fN("Existence Testing Expressions","53");
B=A.fN("Logical Expressions","54");
B=A.fN("New Object Expressions","55");
B=A.fN("Relational Expressions","56");
B=A.fN("Unary Expressions","57");
B=A.fN("Importing Types and Package Namespaces","58");
B=A.fN("Conditional Ternary Expressions","59");
B=A.fN("Special Gosu Expressions","60");
C=B.fN("Function Calls","61");
C=B.fN("Static Method Calls","62");
C=B.fN("Static Property Paths","63");
B=A.fN("Handling Null Values In Expressions","64");
C=B.fN("Null-safe Property Access","64#1597340");
C=B.fN("Null-safe Default Operator","64#1598038");
C=B.fN("Null-safe Indexing for Arrays, Lists, and Maps","64#1598052");
C=B.fN("Null-safe Math Operators","64#1597472");
A=P.fN("Statements","65");
B=A.fN("Gosu Statements","66");
C=B.fN("Statement Lists","66#1440698");
B=A.fN("Gosu Variables","67");
C=B.fN("Variable Type Declaration","67#1141530");
C=B.fN("Variable Assignment","67#1453654");
B=A.fN("Gosu Conditional Execution and Looping","68");
C=B.fN("If() \u2026 Else() Statements","68#1142199");
C=B.fN("For() Statements","68#1456475");
C=B.fN("While() Statements","68#1141335");
C=B.fN("Do\u2026While() Statements","68#1137579");
C=B.fN("Switch() Statements","68#1137580");
B=A.fN("Gosu Functions","69");
C=B.fN("Named Functions Arguments and Argument Defaults","69#1483902");
C=B.fN("Public and Private Functions","69#1483028");
A=P.fN("Intervals","70");
B=A.fN("What are Intervals?","71");
C=B.fN("Reversing Interval Order","71#1456056");
C=B.fN("Granularity (Step and Unit)","71#1456531");
B=A.fN("Writing Your Own Interval Type","72");
C=B.fN("Custom Iterable Intervals Using Sequenceable Items","72#1461393");
C=B.fN("Custom Iterable Intervals Using Manually-written Iterators","72#1462661");
C=B.fN("Custom Non-iterable Interval Types","72#1461152");
A=P.fN("Exception Handling","73");
B=A.fN("Try-Catch-Finally Constructions","74");
B=A.fN("Throw Statements","75");
B=A.fN("Checked Exceptions in Gosu","76");
B=A.fN("Object Lifecycle Management (\u2018using\u2019 Clauses)","77");
C=B.fN("Disposable Objects","77#1466707");
C=B.fN("Closeable Objects and \u2018using\u2019 Clauses","77#1466986");
C=B.fN("Reentrant Objects and \u2018using\u2019 Clauses","77#1457358");
C=B.fN("Returning Values from \u2018using\u2019 Clauses","77#1469250");
A=P.fN("Classes","78");
B=A.fN("What Are Classes?","79");
B=A.fN("Creating and Instantiating Classes","80");
C=B.fN("Creating a New Instance of a Class","80#2449212");
C=B.fN("Naming Conventions for Packages and Classes","80#2447745");
B=A.fN("Properties","81");
C=B.fN("Properties Act Like Data But They Are Dynamic and Virtual Functions","81#2477145");
C=B.fN("Property Paths are Null Tolerant","81#2465283");
C=B.fN("Static Properties","81#2449277");
C=B.fN("More Property Examples","81#2447851");
B=A.fN("Modifiers","82");
C=B.fN("Access Modifiers","82#2445688");
C=B.fN("Override Modifier","82#2449862");
C=B.fN("Abstract Modifier","82#2449868");
C=B.fN("Final Modifier","82#2449875");
C=B.fN("Static Modifier","82#2446412");
B=A.fN("Inner Classes","83");
C=B.fN("Named Inner Classes","83#2450636");
C=B.fN("Anonymous Inner Classes","83#2450064");
A=P.fN("Enumerations","84");
B=A.fN("Using Enumerations","85");
C=B.fN("Extracting Information from Enumerations","85#1459344");
C=B.fN("Comparing Enumerations","85#1459295");
A=P.fN("Interfaces","86");
B=A.fN("What is an Interface?","87");
B=A.fN("Defining and Using an Interface","88");
C=B.fN("Defining and Using Properties with Interfaces","88#1457203");
C=B.fN("Modifiers and Interfaces","88#1459141");
A=P.fN("Composition","89");
B=A.fN("Using Gosu Composition","90");
C=B.fN("Overriding Methods Independent of the Delegate Class","90#2201000");
C=B.fN("Declaring Delegate Implementation Type in the Variable Definition","90#2198236");
C=B.fN("Using One Delegate for Multiple Interfaces","90#2198240");
C=B.fN("Using Composition With Built-in Interfaces","90#2198246");
A=P.fN("Annotations","91");
B=A.fN("Annotating a Class, Method, Type, or Constructor","92");
C=B.fN("Built-in Annotations","92#1471842");
B=A.fN("Annotations at Run Time","93");
B=A.fN("Defining Your Own Annotations","94");
C=B.fN("Customizing Annotation Usage","94#1434674");
A=P.fN("Enhancements","95");
B=A.fN("Using Enhancements","96");
C=B.fN("Syntax for Using Enhancements","96#1439437");
C=B.fN("Creating a New Enhancement","96#1439200");
C=B.fN("Syntax for Defining Enhancements","96#1439430");
C=B.fN("Enhancement Naming and Package Conventions","96#1437458");
C=B.fN("Enhancements on Arrays","96#1438604");
A=P.fN("Gosu Blocks","97");
B=A.fN("What Are Blocks?","98");
B=A.fN("Basic Block Definition and Invocation","99");
B=A.fN("Variable Scope and Capturing Variables In Blocks","100");
B=A.fN("Argument Type Inference Shortcut In Certain Cases","101");
B=A.fN("Block Type Literals","102");
B=A.fN("Blocks and Collections","103");
B=A.fN("Blocks as Shortcuts for Anonymous Classes","104");
A=P.fN("Gosu Generics","105");
B=A.fN("Gosu Generics Overview","106");
B=A.fN("Using Gosu Generics","107");
B=A.fN("Other Unbounded Generics Wildcards","108");
B=A.fN("Generics and Blocks","109");
B=A.fN("How Generics Help Define Collection APIs","110");
B=A.fN("Multiple Dimensionality Generics","111");
B=A.fN("Generics With Custom \u2018Containers\u2019","112");
C=B.fN("Generics with Non-Containers","112#1446525");
A=P.fN("Collections","113");
B=A.fN("Basic Lists","114");
B=A.fN("Basic HashMaps","115");
C=B.fN("Special Enhancements on Maps","115#1452216");
B=A.fN("List and Array Expansion (*.)","116");
B=A.fN("Enhancement Reference for Collections and Related Types","117");
C=B.fN("Collections Enhancement Methods","118");
C=B.fN("Finding Data in Collections","118#1462591");
C=B.fN("Sorting Collections","118#1444564");
C=B.fN("Mapping Data in Collections","118#1442277");
C=B.fN("Iterating Across Collections","118#1442285");
C=B.fN("Partitioning Collections","118#1442296");
C=B.fN("Converting Lists, Arrays, and Sets","118#1449882");
C=B.fN("Flat Mapping a Series of Collections or Arrays","118#1450050");
C=B.fN("Sizes and Length of Collections and Strings are Equivalent","118#1443101");
A=P.fN("Gosu and XML","119");
B=A.fN("Manipulating XML Overview","120");
B=A.fN("Introduction to XmlElement","121");
C=B.fN("Dollar Sign Prefix For Some Properties When Using XSD Types","122");
B=A.fN("Exporting XML Data","123");
B=A.fN("Parsing XML Data into an XML Element","124");
B=A.fN("Creating Many QNames in the Same Namespace","125");
B=A.fN("XSD-based Properties and Types","126");
C=B.fN("Important Concepts in XSD Properties and Types","126#1651042");
C=B.fN("XSD Generated Type Examples","126#1673249");
C=B.fN("Automatic Insertion into Lists","126#1673851");
C=B.fN("XSD List Property Example","126#1610237");
B=A.fN("Getting Data From an XML Element","127");
C=B.fN("Manipulating Elements and Values (Works With or Without XSD)","128");
C=B.fN("Attributes","128#1520181");
B=A.fN("Simple Values","129");
C=B.fN("XSD to Gosu Simple Type Mappings","129#1622952");
C=B.fN("Facet Validation","129#1623085");
B=A.fN("Access the Nillness of an Element","130");
B=A.fN("Automatic Creation of Intermediary Elements","131");
B=A.fN("Default/Fixed Attribute Values","132");
B=A.fN("Substitution Group Hierarchies","133");
B=A.fN("Element Sorting for XSD-based Elements","134");
B=A.fN("Built-in Schemas","135");
C=B.fN("The XSD that Defines an XSD (The Metaschema)","135#1541995");
B=A.fN("Schema Access Type","136");
A=P.fN("Calling WS-I Web Services from Gosu","137");
B=A.fN("Consuming WS-I Web Service Overview","137#2001852");
C=B.fN("Loading WS-I WSDL Directly into the File System","137#2064509");
C=B.fN("How Does Gosu Process WSDL?","137#2013784");
C=B.fN("Learning Gosu XML APIs","137#2047933");
C=B.fN("What Gosu Creates from Your WSDL","137#2043632");
C=B.fN("A Real Example: Weather","137#2047856");
B=A.fN("Adding WS-I Configuration Options","138");
C=B.fN("HTTP Authentication","138#2064831");
C=B.fN("Setting a Timeout","138#2055335");
C=B.fN("Custom SOAP Headers","138#2052743");
C=B.fN("Server Override URL","138#2056586");
C=B.fN("Implementing Advanced Web Service Security with WSS4J","138#2052910");
B=A.fN("One-Way Methods","139");
B=A.fN("Asynchronous Methods","140");
A=P.fN("Java and Gosu","141");
B=A.fN("Overview of Calling Java from Gosu","142");
C=B.fN("Java Classes are First-Class Types","142#2002026");
C=B.fN("Many Java Classes are Core Classes for Gosu","142#2002392");
C=B.fN("Java Packages in Scope","142#2002365");
C=B.fN("Static Members in Gosu","142#2047802");
C=B.fN("Simple Java Example","142#2003007");
C=B.fN("Java Get and Set Methods Convert to Gosu Properties","142#2021794");
C=B.fN("Interfaces","142#2020668");
C=B.fN("Enumerations","142#2020577");
C=B.fN("Annotations","142#2047848");
C=B.fN("Java Primitives","142#2047899");
B=A.fN("Deploying Your Java Classes","143");
B=A.fN("Java Class Loading, Delegation, and Package Naming","144");
C=B.fN("Java Class Loading Rules","144#2031881");
A=P.fN("Gosu Templates","145");
B=A.fN("Template Overview","146");
C=B.fN("Template Expressions","146#1464080");
C=B.fN("When to Escape Special Characters for Templates","147");
B=A.fN("Using Template Files","148");
C=B.fN("Creating and Running a Template File","148#1464601");
C=B.fN("Template Scriptlet Tags","148#1461443");
C=B.fN("Template Parameters","148#1463866");
C=B.fN("Extending a Template From a Class","148#1455745");
C=B.fN("Template Comments","148#1463274");
B=A.fN("Template Export Formats","148#1465221");
A=P.fN("Type System","149");
B=A.fN("Basic Type Coercion","149#1444327");
B=A.fN("Basic Type Checking","150");
C=B.fN("Automatic Downcasting for \u2018typeis\u2019 and \u2018typeof\u2019","150#1455253");
B=A.fN("Using Reflection","151");
C=B.fN("Type Object Properties","151#1441372");
C=B.fN("Java Type Reflection","151#1441477");
C=B.fN("Type System Class","151#1465566");
B=A.fN("Compound Types","152");
B=A.fN("Type Loaders","153");
A=P.fN("Running Local Shell Commands","154");
B=A.fN("Running Command Line Tools from Gosu","154#2186018");
A=P.fN("Checksums","155");
B=A.fN("Overview of Checksums","156");
B=A.fN("Creating Fingerprints","156#1442951");
C=B.fN("How to Output Data Inside a Fingerprint","156#1443786");
B=A.fN("Extending Fingerprints","156#1442456");
A=P.fN("Concurrency","157");
B=A.fN("Overview of Thread Safety and Concurrency","158");
B=A.fN("Gosu Scoping Classes (Pre-scoped Maps)","159");
B=A.fN("Concurrent Lazy Variables","160");
B=A.fN("Concurrent Cache","161");
B=A.fN("Concurrency with Monitor Locks and Reentrant Objects","162");
A=P.fN("Properties Files","163");
B=A.fN("Reading Properties Files","163#1458192");
A=P.fN("Coding Style","164");
B=A.fN("General Coding Guidelines","165");
C=B.fN("Omit Semicolons","165#1445233");
C=B.fN("Type Declarations","165#1445238");
C=B.fN("The == and != Operator Recommendations and Warnings","165#1445388");
C=B.fN("Gosu Case Sensitivity Implications","165#1446066");
C=B.fN("Class Variable and Class Property Recommendations","165#1446206");
C=B.fN("Use \u2018typeis\u2019 Inference","165#1454113");
}
